// <auto-generated />
using System;
using DevIO.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevIO.Api.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DevIO.Api.Entity.CategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(3556),
                            Descricao = "Combustivel"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(3565),
                            Descricao = "Lubrificantes"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(3566),
                            Descricao = "Diversos"
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(7365),
                            Email = "sofia@mail.com",
                            Nome = "Sofia Marli Porto"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(7370),
                            Email = "raimunda@mail.com",
                            Nome = "Raimunda Isis Olivia Vieira"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(7372),
                            Email = "oliver@mail.com",
                            Nome = "Oliver Arthur da Mota"
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.EmpresaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 879, DateTimeKind.Utc).AddTicks(2714),
                            Email = "postocidade@mail.com",
                            Foto = "",
                            Nome = "Posto de Gasolina Cidade"
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5101),
                            Descricao = "Gasolina Aditivada",
                            Ean = "9789563530701",
                            Preco = 5.50m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5377),
                            Descricao = "Gasolina Comum",
                            Ean = "9789563530702",
                            Preco = 5.10m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5381),
                            Descricao = "Alcool Comum",
                            Ean = "9789563530703",
                            Preco = 4.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5383),
                            Descricao = "Alcool Aditivado",
                            Ean = "9789563530704",
                            Preco = 4.15m
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5384),
                            Descricao = "Diesel",
                            Ean = "9789563530705",
                            Preco = 3.98m
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5386),
                            Descricao = "Óleo Lubrificante Motor 20w",
                            Ean = "9789563530710",
                            Preco = 20.00m
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5387),
                            Descricao = "Óleo Lubrificante Motor 40w",
                            Ean = "9789563530711",
                            Preco = 21.00m
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5389),
                            Descricao = "Água sem Gás",
                            Ean = "9789563530720",
                            Preco = 2.00m
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(5390),
                            Descricao = "Água com Gás",
                            Ean = "9789563530721",
                            Preco = 2.10m
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6401),
                            Email = "fernandosilva@mail.com",
                            Nome = "Fernando Silva"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6406),
                            Email = "marcos@mail.com",
                            Nome = "Marcos"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6408),
                            Email = "ellena@mail.com",
                            Nome = "Ellena"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6409),
                            Email = "Rafaela@mail.com",
                            Nome = "Rafaela"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6410),
                            Email = "heloisa@mail.com",
                            Nome = "Heloisa"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6412),
                            Email = "manuella@mail.com",
                            Nome = "Manuella"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(6413),
                            Email = "luan@mail.com",
                            Nome = "Luan"
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.VendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 2,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8435),
                            DataVenda = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8147),
                            TotalVenda = 100.00m
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 3,
                            CreatedAt = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8754),
                            DataVenda = new DateTime(2021, 8, 23, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8751),
                            TotalVenda = 75.00m
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 1,
                            CreatedAt = new DateTime(2021, 8, 25, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8894),
                            DataVenda = new DateTime(2021, 8, 25, 21, 26, 44, 880, DateTimeKind.Utc).AddTicks(8757),
                            TotalVenda = 200.00m
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.VendaItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProduto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorProduto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendasItens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProdutoId = 2,
                            Quantidade = 18.18m,
                            TotalProduto = 100.00m,
                            ValorProduto = 5.50m,
                            VendaId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProdutoId = 1,
                            Quantidade = 9.80m,
                            TotalProduto = 50.00m,
                            ValorProduto = 5.10m,
                            VendaId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProdutoId = 9,
                            Quantidade = 12m,
                            TotalProduto = 25.00m,
                            ValorProduto = 2.10m,
                            VendaId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProdutoId = 5,
                            Quantidade = 50.24m,
                            TotalProduto = 200.00m,
                            ValorProduto = 3.98m,
                            VendaId = 3
                        });
                });

            modelBuilder.Entity("DevIO.Api.Entity.ProdutoEntity", b =>
                {
                    b.HasOne("DevIO.Api.Entity.CategoriaEntity", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("DevIO.Api.Entity.VendaEntity", b =>
                {
                    b.HasOne("DevIO.Api.Entity.ClienteEntity", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("DevIO.Api.Entity.VendaItemEntity", b =>
                {
                    b.HasOne("DevIO.Api.Entity.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevIO.Api.Entity.VendaEntity", "Venda")
                        .WithMany("VendaItem")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("DevIO.Api.Entity.CategoriaEntity", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("DevIO.Api.Entity.ClienteEntity", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("DevIO.Api.Entity.VendaEntity", b =>
                {
                    b.Navigation("VendaItem");
                });
#pragma warning restore 612, 618
        }
    }
}
